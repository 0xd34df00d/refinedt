grammar
e {{ tex \nonterm e }} :: tm_ ::= {{ com terms }}
  | x				::   :: var {{ com variable }}
  | n				::   :: int {{ com integer }}
  | if e1 then e2 else e3
					::   :: ite {{ com conditional }}
  | e1 e2			::   :: app {{ com application }}
  | e1 binop e2		::   :: binop {{ com binary op }}

binop {{ tex \nonterm{binop} }} :: tm_ ::= {{ com binary ops }}
  | +				::   :: opplus
  | <				::   :: oplt
  | ==				::   :: opeq

r {{ tex \nonterm r }} :: tp_ ::= {{ com refinements }}
  | top				::   :: rtrue {{ com true refinement }}
  | e				::   :: rexpr {{ com atomic refinement }}
  | r1 /\ r2		::   :: rconj {{ com conjunction }}

B {{ tex \nonterm B }} :: tp_ ::= {{ com base types }}
  | Int				::   :: bInt
  | Bool			::	 :: bBool

t {{ tex \nonterm t }} :: tp_ ::= {{ com types }}
  | { v : B | r }	::   :: tybase {{ com refined base type }}
  | x : t_1 -> t_2	::   :: tyarr  {{ com arrow type }}

metavar x {{ tex \gterm x }} ::= {{ com variables }}
metavar n {{ tex \gterm n }} ::= {{ com integers }}

grammar
terminals :: terminals_ ::=
  | top		:: :: top {{ tex \top }}
  | /\      :: :: and {{ tex \land }}
  | v		:: :: v	  {{ tex \nu }}
  | ->      :: :: arr {{ tex \rightarrow }}
